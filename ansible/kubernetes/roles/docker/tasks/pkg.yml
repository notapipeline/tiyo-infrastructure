---
- name: Install apt-transport-https
  when: ansible_os_family == "Debian"
  apt:
    name: "apt-transport-https"
    state: present
    update_cache: yes

- name: Add Docker APT GPG key
  when: ansible_os_family == "Debian"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker APT repository
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu xenial stable
    state: present
    filename: "docker"

- name: Add Kubernetes yum repository
  when: ansible_os_family == "RedHat"
  yum_repository:
    name: Kubernetes
    description: Kubernetes Repository
    file: kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64/
    enabled: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Add Docker yum repository
  when: ansible_os_family == "RedHat"
  yum_repository:
    name: Docker
    description: Docker Repository
    file: docker
    baseurl: https://download.docker.com/linux/centos/8/x86_64/stable/
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg

- name: Install docker engine (RHEL/CentOS)
  when: ansible_os_family == "RedHat"
  yum:
    name: [
      'containerd.io-1.4.3-3.1.el8',
      'docker-ce-20.10.0-3.el8',
      'docker-ce-cli-20.10.0-3.el8',
      'docker-ce-rootless-extras-20.10.0-3.el8',
    ]
    state: present

- name: Install docker engine (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  apt:
    update_cache: yes
    name: "docker-ce={{ docker_version }}*"
    state: present

- name: Hold docker version
  when: ansible_os_family == "Debian"
  dpkg_selections:
    name: docker-ce
    selection: hold

